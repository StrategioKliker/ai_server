
services: 
  
  redis: 
    image: redis:7-bookworm
    volumes: 
      - redis_data:/data 
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 1s 
      retries: 5
    networks: 
      ai_net: 
        ipv4_address: 172.28.0.2

  model-server:
    build: .
    command: python -m uvicorn model_server:app --host 0.0.0.0 --port 8001
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8001/health"]
      interval: 60s
      timeout: 20s
      retries: 5
      start_period: 180s
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    networks: 
      ai_net: 
        ipv4_address: 172.28.0.3


  # ollama: 
  #   environment: 
  #     - OLLAMA_HOST=http://0.0.0.0:11435
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile.ollama
  #   ports: 
  #     - "11435:11435"
  #   volumes: 
  #     - ./ollama:/root/.ollama
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: all
  #             capabilities: [gpu]
    # healthcheck:
    #   test: ["CMD", "curl", "-fsS", "http://localhost:11435/api/tags"]
    #   interval: 3s
    #   timeout: 5s
    #   retries: 10
    #   start_period: 20s

  app: 
    build: .
    command: python -m uvicorn server:app --host 0.0.0.0 --port 8000
    ports: 
      - "8000:8000"
    environment: 
      - REDIS_URL=redis://redis:6379/0
      - OLLAMA_URL=http://ollama:11435/api/generate 
      - LLAMA_CPP_LOG_LEVEL=error
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - MODEL_SERVER_IP=172.28.0.3
    depends_on: 
      # ollama: 
      #   condition: service_started 
      redis:
        condition: service_healthy
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    networks: 
      ai_net: 
        ipv4_address: 172.28.0.4
      

  worker:
    build: .
    command: python worker.py
    environment:
      - REDIS_URL=redis://redis:6379/0
      - OLLAMA_URL=http://ollama:11435/api/generate
      - MODEL_SERVER_URL=http://model-server:8001/infer
      - LLAMA_CPP_LOG_LEVEL=error
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - MODEL_SERVER_IP=172.28.0.3
    depends_on: 
      redis:
        condition: service_healthy
      model-server:
        condition: service_healthy
      # ollama:
      #   condition: service_started
    restart: always 
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    networks: 
      ai_net: 
        ipv4_address: 172.28.0.5
      

  cadvisor: 
    image:  gcr.io/cadvisor/cadvisor:v0.47.2
    ports: 
      - "7071:7071"
    volumes: 
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command: 
      - '-port=7071'
    networks: 
      ai_net: 
        ipv4_address: 172.28.0.6

  prometheus: 
    image: prom/prometheus:latest 
    ports: 
      - "9090:9090"
    volumes: 
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    depends_on: 
      - cadvisor
    networks: 
      ai_net: 
        ipv4_address: 172.28.0.7

  grafana:
    environment:
      - GF_SERVER_ROOT_URL=http://127.0.0.1:8080/grafana/ 
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_LOG_LEVEL=error  
    image: grafana/grafana:latest
    ports: 
      - "3000:3000"
    depends_on:
      - prometheus
    volumes: 
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks: 
      ai_net: 
        ipv4_address: 172.28.0.8

  node-exporter:
    image: prom/node-exporter:latest
    ports: 
      - "9100:9100"
    volumes: 
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/machine-id:/etc/machine-id:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--no-collector.filesystem'
    networks: 
      ai_net: 
        ipv4_address: 172.28.0.9

  # dcgm-exporter: 
  #   image: nvidia/dcgm-exporter:latest
  #   runtime: nvidia
  #   ports:
  #     - "9400:9400"
  #   cap_add: 
  #     - SYS_ADMIN

  nginx:
    image: nginx:latest 
    ports: 
      - "8080:8080"
      - "2222:2222"
    volumes: 
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app 
      - grafana 
    networks: 
      ai_net: 
        ipv4_address: 172.28.0.10

volumes: 
  redis_data:
  grafana_data:

networks: 
  ai_net: 
    driver: bridge 
    ipam: 
      config: 
        - subnet: 172.28.0.0/16